{"version":3,"file":"js/158.b78a8e114ab33b777612.js","mappings":"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","sources":["webpack://heta-online/webpack/runtime/chunk loaded","webpack://heta-online/webpack/runtime/startup chunk dependencies","webpack://heta-online/./src/build.js","webpack://heta-online/webpack/bootstrap","webpack://heta-online/webpack/runtime/amd define","webpack://heta-online/webpack/runtime/amd options","webpack://heta-online/webpack/runtime/compat get default export","webpack://heta-online/webpack/runtime/define property getters","webpack://heta-online/webpack/runtime/ensure chunk","webpack://heta-online/webpack/runtime/get javascript chunk filename","webpack://heta-online/webpack/runtime/get mini-css chunk filename","webpack://heta-online/webpack/runtime/global","webpack://heta-online/webpack/runtime/hasOwnProperty shorthand","webpack://heta-online/webpack/runtime/make namespace object","webpack://heta-online/webpack/runtime/node module decorator","webpack://heta-online/webpack/runtime/publicPath","webpack://heta-online/webpack/runtime/importScripts chunk loading","webpack://heta-online/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(4),\n\t\t__webpack_require__.e(169)\n\t]).then(next);\n};","import { Container, ModuleSystem, Transpot } from 'heta-compiler/src/webpack';\nimport path from 'path';\nimport declarationSchema from 'heta-compiler/src/builder/declaration-schema.json';\nimport Ajv from 'ajv';\n//const ajvErrors = require('ajv-errors');\nimport hetaCompilerPackage from 'heta-compiler/package.json';\nimport semver from 'semver';\n\nconst reader = new FileReaderSync();\n\nlet ajv = new Ajv({allErrors: true, useDefaults: true});\najv.addKeyword({\n    keyword: \"example\",\n    type: \"string\",\n});\n//ajvErrors(ajv, {singleError: false}); // this is required for custom messages see https://ajv.js.org/packages/ajv-errors.html\nconst validate = ajv.compile(declarationSchema);\n\nlet contactMessage = `\n +-------------------------------------------------------------------+ \n | Internal \"Heta compiler\" error, contact the developers.           | \n | Create an issue: ${hetaCompilerPackage.bugs.url} | \n | or mail to: ${hetaCompilerPackage.bugs.email}                                     | \n +-------------------------------------------------------------------+ \n`;\n\nself.onmessage = (evt) => {\n    let inputDict = evt.data.files;\n    // first lines in console\n    postMessage({action: 'console', value: 'heta build'});\n    postMessage({action: 'console', value: '\\nRunning compilation with declaration file \"/platform.json\"...'});\n\n    // create declaration\n    let declarationBuffer = inputDict['/platform.json'];\n    let declarationText = new TextDecoder('utf-8').decode(declarationBuffer);\n    try {\n        var declaration = JSON.parse(declarationText);\n    } catch (e) {\n        postMessage({action: 'console', value: `\\nDeclaration file must be JSON formatted:`});\n        postMessage({action: 'console', value: `\\n\\t- ${e.message}`});\n        \n        postMessage({action: 'console', value: '\\n\\n$ '});\n        return;\n    }\n\n    // validate and set defaults\n    let valid = validate(declaration);\n    if (!valid) { // analyze errors\n        postMessage({action: 'console', value: '\\nErrors in declaration file:'});\n        validate.errors.forEach((ajvError) => {\n            let msg = `\\n\\t- \"${ajvError.instancePath}\" ${ajvError.message}`;\n            postMessage({action: 'console', value: msg});\n        });\n\n        postMessage({action: 'console', value: '\\n\\n$ '});\n        return;\n    }\n\n    // === wrong version throws, if no version stated than skip ===\n    let satisfiesVersion = semver.satisfies(hetaCompilerPackage.version, declaration.builderVersion);\n    if (!satisfiesVersion) {\n        postMessage({action: 'console', value: `\\nVersion requirements (${declaration.builderVersion}) don't meet builder version ${hetaCompilerPackage.version}.`});\n        \n        postMessage({action: 'console', value: '\\n\\n$ '});\n        return;\n    }\n\n    // === this part displays \"send errors to developer\" message ===\n    try {\n        var container = build(inputDict, declaration);\n    } catch(error) {\n        postMessage({action: 'console', value: contactMessage + '\\n'});\n        postMessage({action: 'console', value: error.stack});\n\n        postMessage({action: 'console', value: '\\n\\n$ '});\n        return;\n    }\n\n    if (container.hetaErrors().length > 0) {\n        postMessage({action: 'console', value: '\\nCompilation ERROR! See logs.'});\n    } else {\n        postMessage({action: 'console', value: '\\nCompilation OK!'});\n    }\n\n    postMessage({action: 'console', value: '\\n\\n$ '});\n};\n\nfunction build(inputDict, settings) { // modules, exports\n    let coreDirname = '/';\n    /*\n        constructor()\n    */\n\n    // create container and logger\n    let c = new Container();\n    /*\n    c.logger.addTransport((level, msg, opt, levelNum) => { // temporal solution, all logs to console\n        console.log(`{heta-compiler} [${level}]\\t${msg}`);\n    });\n    */\n    c.logger.addTransport((level, msg, opt, levelNum) => {\n        let value = `\\n[${level}]\\t${msg}`;\n\n        postMessage({action: 'console', value: value});\n    });\n\n    // file paths\n    let _coreDirname = path.resolve(coreDirname);\n    let _distDirname = path.resolve(coreDirname, settings.options.distDir);\n    let _metaDirname = path.resolve(coreDirname, settings.options.metaDir);\n    let _logPath = path.resolve(coreDirname, settings.options.logPath);\n\n    c.logger.info(`Heta builder of version ${hetaCompilerPackage.version} initialized in directory \"${_coreDirname}\"`);\n    if (settings.id) c.logger.info(`Platform id: \"${settings.id}\"`);\n\n    /*\n        run()\n    */\n    let outputDict = {}; // {<filepath>: <Buffer>}\n    c.logger.info(`Compilation of module \"${settings.importModule.source}\" of type \"${settings.importModule.type}\"...`);\n\n    // 1. Parsing\n    let ms = new ModuleSystem(c.logger, (filename) => {\n        let arrayBuffer = inputDict[filename]; // Uint8Array\n        if (!arrayBuffer) {\n            throw new Error(`Module ${filename} is not found.`);\n        }\n        let buffer = Buffer.from(arrayBuffer); // Buffer\n        \n        return buffer;\n    });\n    let sourceFilepath = path.resolve(_coreDirname, settings.importModule.source);\n    let sourceType = settings.importModule.type;\n    ms.addModuleDeep(sourceFilepath, sourceType, settings.importModule);\n\n    // 2. Modules integration\n    if (settings.options.debug) {\n        Object.getOwnPropertyNames(ms.moduleCollection).forEach((name) => {\n            let relPath = path.relative(_coreDirname, name + '.json');\n            let absPath = path.join(_metaDirname, relPath);\n            let str = JSON.stringify(ms.moduleCollection[name], null, 2);\n            outputDict[absPath] = Buffer.from(str, 'utf-8');\n            c.logger.info(`Meta file was saved to ${absPath}`);\n        });\n    }\n    let qArr = ms.integrate();\n    \n    // 3. Translation\n    c.loadMany(qArr, false);\n    \n    // 4. Binding\n    c.logger.info('Setting references in elements, total length ' + c.length);\n    c.knitMany();\n    \n    // 5. Circular start_ and ode_\n    c.logger.info('Checking for circular references in Records.');\n    c.checkCircRecord();\n    \n    // 6. check circ UnitDef\n    c.checkCircUnitDef();\n\n    \n    // === STOP if errors ===\n    if (!c.logger.hasErrors) {\n\n        // 7. Units checking\n        if (settings.options.unitsCheck) {\n          c.logger.info('Checking unit\\'s consistency.');\n          c.checkUnits();\n        } else {\n          c.logger.warn('Units checking skipped. To turn it on set \"unitsCheck: true\" in declaration.');\n        }\n\n        // 8. Terms checking\n        c.logger.info('Checking unit\\'s terms.');\n        c.checkTerms();\n\n        // 9. Exports\n        // save\n        if (settings.options.skipExport) {\n            c.logger.warn('Exporting skipped as stated in declaration.');\n        } else if (settings.options.juliaOnly) {\n            c.logger.warn('\"Julia only\" mode');\n            //this.exportJuliaOnly(); \n            // create export without putting it to exportStorage\n            let Julia = this.container.classes['Julia'];\n            let exportItem = new Julia({\n                format: 'Julia',\n                filepath: '_julia'\n            });\n\n            _makeAndSave(exportItem, _distDirname, outputDict);\n        } else {\n            //this.exportMany();\n            let exportElements = [...c.exportStorage].map((x) => x[1]);\n            c.logger.info(`Start exporting to files, total: ${exportElements.length}.`);\n\n            exportElements.forEach((exportItem) => _makeAndSave(exportItem, _distDirname, outputDict));\n        }\n      } else {\n        c.logger.warn('Units checking and export were skipped because of errors in compilation.');\n      }\n\n    // 10. save logs if required\n    let hetaErrors = c.hetaErrors();\n    let createLog = settings.options.logMode === 'always' \n      || (settings.options.logMode === 'error' && hetaErrors.length > 0);\n    if (createLog) {\n      switch (settings.options.logFormat) {\n      case 'json':\n        var logs = JSON.stringify(c.defaultLogs, null, 2);\n        break;\n      default: \n        logs = c.defaultLogs\n          .map(x => `[${x.level}]\\t${x.msg}`)\n          .join('\\n');  \n      }\n\n      //fs.outputFileSync(_logPath, logs);\n      outputDict[_logPath] = Buffer.from(logs, 'utf-8'); // Buffer\n      c.logger.info(`All logs was saved to file: \"${_logPath}\"`);\n    }\n\n    if (!c.logger.hasErrors) {\n        postMessage({action: 'finished', dict: outputDict});\n    } else {\n        postMessage({action: 'stop', dict: outputDict});\n    }\n    \n    return c;\n}\n\nfunction _makeAndSave(exportItem, distDirectory, outputDict) {\n    let logger = exportItem._container.logger;\n    let filepath0 = path.resolve(distDirectory, exportItem.filepath); // /dist/matlab\n    let msg = `Exporting to \"${filepath0}\" of format \"${exportItem.format}\"...`;\n    logger.info(msg);\n\n    let mmm = exportItem.make();\n\n    mmm.forEach((out) => {\n        let filepath = filepath0 + out.pathSuffix; // /dist/matlab/run.jl\n        try {\n            outputDict[filepath] = out.content;\n        } catch (e) {\n            let msg =`Heta compiler cannot export to file: \"${filepath}\": \\n\\t- ${e.message}`;\n            logger.error(msg, {type: 'ExportError'});\n        }\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [4,169], () => (__webpack_require__(74189)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"4\":\"f2af3769202e152c8cb1\",\"169\":\"154fffefc69ec8b583e6\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t158: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkheta_online\"] = self[\"webpackChunkheta_online\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","FileReaderSync","ajv","Ajv","allErrors","useDefaults","addKeyword","keyword","type","validate","compile","declarationSchema","contactMessage","concat","hetaCompilerPackage","_makeAndSave","exportItem","distDirectory","outputDict","logger","_container","filepath0","path","filepath","msg","format","info","make","forEach","out","pathSuffix","content","e","message","error","self","onmessage","evt","inputDict","data","files","postMessage","action","value","declarationBuffer","declarationText","TextDecoder","decode","declaration","JSON","parse","errors","ajvError","instancePath","semver","builderVersion","container","settings","coreDirname","c","Container","addTransport","level","opt","levelNum","_coreDirname","_distDirname","options","distDir","_metaDirname","metaDir","_logPath","logPath","id","importModule","source","ms","ModuleSystem","filename","arrayBuffer","Error","Buffer","from","sourceFilepath","sourceType","addModuleDeep","debug","Object","getOwnPropertyNames","moduleCollection","name","relPath","absPath","str","stringify","qArr","integrate","loadMany","length","knitMany","checkCircRecord","checkCircUnitDef","hasErrors","warn","unitsCheck","checkUnits","checkTerms","skipExport","juliaOnly","Julia","this","classes","exportElements","_toConsumableArray","exportStorage","map","x","hetaErrors","logMode","logFormat","logs","defaultLogs","join","dict","build","stack","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","__webpack_exports__","O","amdD","amdO","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","replace","p","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","then"],"sourceRoot":""}