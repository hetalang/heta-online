(()=>{var e,o,n={74189:(e,o,n)=>{"use strict";var t=n(45770),r=n(91519),a=n.n(r),i=n(92629),s=n(29550),l=n.n(s),c=n(12883),p=n(85811),u=n.n(p),f=n(36694).lW;function d(e){return function(e){if(Array.isArray(e))return g(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,o){if(!e)return;if("string"==typeof e)return g(e,o);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return g(e,o)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,o){(null==o||o>e.length)&&(o=e.length);for(var n=0,t=new Array(o);n<o;n++)t[n]=e[n];return t}var v=new FileReaderSync,m=new(l())({allErrors:!0,useDefaults:!0});m.addKeyword({keyword:"example",type:"string"});var h=m.compile(i),y='\n +-------------------------------------------------------------------+ \n | Internal "Heta compiler" error, contact the developers.           | \n | Create an issue: '.concat(c.bugs.url," | \n | or mail to: ").concat(c.bugs.email,"                                     | \n +-------------------------------------------------------------------+ \n");function b(e,o,n){var t=e._container.logger,r=a().resolve(o,e.filepath),i='Exporting to "'.concat(r,'" of format "').concat(e.format,'"...');t.info(i),e.make().forEach((function(e){var o=r+e.pathSuffix;try{n[o]=new File([e.content],o)}catch(e){var a='Heta compiler cannot export to file: "'.concat(o,'": \n\t- ').concat(e.message);t.error(a,{type:"ExportError"})}}))}self.onmessage=function(e){var o=e.data.files;postMessage({action:"console",value:"heta build",append:!0}),postMessage({action:"console",value:'\nRunning compilation with declaration file "/platform.json"...',append:!0});var n=o["/platform.json"],r=v.readAsText(n);try{var i=JSON.parse(r)}catch(e){return postMessage({action:"console",value:"\nDeclaration file must be JSON formatted:",append:!0}),postMessage({action:"console",value:"\n\t- ".concat(e.message),append:!0}),void postMessage({action:"console",value:"\n\n$ ",append:!0})}if(!h(i))return postMessage({action:"console",value:"\nErrors in declaration file:",append:!0}),h.errors.forEach((function(e){var o='\n\t- "'.concat(e.instancePath,'" ').concat(e.message);postMessage({action:"console",value:o,append:!0})})),void postMessage({action:"console",value:"\n\n$ ",append:!0});if(!u().satisfies(c.version,i.builderVersion))return postMessage({action:"console",value:"\nVersion requirements (".concat(i.builderVersion,") don't meet builder version ").concat(c.version,"."),append:!0}),void postMessage({action:"console",value:"\n\n$ ",append:!0});try{var s=function(e,o){var n="/",r=new t.Container;r.logger.addTransport((function(e,o,n,t){var r="\n[".concat(e,"]\t").concat(o);postMessage({action:"console",value:r,append:!0})}));var i=a().resolve(n),s=a().resolve(n,o.options.distDir),l=a().resolve(n,o.options.metaDir),p=a().resolve(n,o.options.logPath);r.logger.info("Heta builder of version ".concat(c.version,' initialized in directory "').concat(i,'"')),o.id&&r.logger.info('Platform id: "'.concat(o.id,'"'));var u={};r.logger.info('Compilation of module "'.concat(o.importModule.source,'" of type "').concat(o.importModule.type,'"...'));var g=new t.ModuleSystem(r.logger,(function(o){var n=e[o];if(!n)throw new Error("File ".concat(o," is not found."));var t=v.readAsArrayBuffer(n);return f.from(t)})),m=a().resolve(i,o.importModule.source),h=o.importModule.type;g.addModuleDeep(m,h,o.importModule),o.options.debug&&Object.getOwnPropertyNames(g.moduleCollection).forEach((function(e){var o=a().relative(i,e+".json"),n=a().join(l,o),t=JSON.stringify(g.moduleCollection[e],null,2);u[n]=new File([t],e+".json"),r.logger.info("Meta file was saved to ".concat(n))}));var y=g.integrate();if(r.loadMany(y,!1),r.logger.info("Setting references in elements, total length "+r.length),r.knitMany(),r.logger.info("Checking for circular references in Records."),r.checkCircRecord(),r.checkCircUnitDef(),r.logger.hasErrors)r.logger.warn("Units checking and export were skipped because of errors in compilation.");else if(o.options.unitsCheck?(r.logger.info("Checking unit's consistency."),r.checkUnits()):r.logger.warn('Units checking skipped. To turn it on set "unitsCheck: true" in declaration.'),r.logger.info("Checking unit's terms."),r.checkTerms(),o.options.skipExport)r.logger.warn("Exporting skipped as stated in declaration.");else if(o.options.juliaOnly){r.logger.warn('"Julia only" mode'),b(new(0,this.container.classes.Julia)({format:"Julia",filepath:"_julia"}),s,u)}else{var w=d(r.exportStorage).map((function(e){return e[1]}));r.logger.info("Start exporting to files, total: ".concat(w.length,".")),w.forEach((function(e){return b(e,s,u)}))}var M=r.hetaErrors();if("always"===o.options.logMode||"error"===o.options.logMode&&M.length>0){if("json"===o.options.logFormat)var k=JSON.stringify(r.defaultLogs,null,2);else k=r.defaultLogs.map((function(e){return"[".concat(e.level,"]\t").concat(e.msg)})).join("\n");u[p]=new File([k],p,{type:"text/plain"}),r.logger.info('All logs was saved to file: "'.concat(p,'"'))}r.logger.hasErrors?postMessage({action:"stop",dict:u}):postMessage({action:"finished",dict:u});return r}(o,i)}catch(e){return postMessage({action:"console",value:y+"\n",append:!0}),postMessage({action:"console",value:e.stack,append:!0}),void postMessage({action:"console",value:"\n\n$ ",append:!0})}s.hetaErrors().length>0?postMessage({action:"console",value:"\nCompilation ERROR! See logs.",append:!0}):postMessage({action:"console",value:"\nCompilation OK!",append:!0}),postMessage({action:"console",value:"\n\n$ ",append:!0})}},52361:()=>{},94616:()=>{},75042:()=>{}},t={};function r(e){var o=t[e];if(void 0!==o)return o.exports;var a=t[e]={id:e,loaded:!1,exports:{}};return n[e].call(a.exports,a,a.exports,r),a.loaded=!0,a.exports}r.m=n,r.x=()=>{var e=r.O(void 0,[613,169],(()=>r(74189)));return e=r.O(e)},r.amdD=function(){throw new Error("define cannot be used indirect")},r.amdO={},e=[],r.O=(o,n,t,a)=>{if(!n){var i=1/0;for(p=0;p<e.length;p++){for(var[n,t,a]=e[p],s=!0,l=0;l<n.length;l++)(!1&a||i>=a)&&Object.keys(r.O).every((e=>r.O[e](n[l])))?n.splice(l--,1):(s=!1,a<i&&(i=a));if(s){e.splice(p--,1);var c=t();void 0!==c&&(o=c)}}return o}a=a||0;for(var p=e.length;p>0&&e[p-1][2]>a;p--)e[p]=e[p-1];e[p]=[n,t,a]},r.n=e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return r.d(o,{a:o}),o},r.d=(e,o)=>{for(var n in o)r.o(o,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},r.f={},r.e=e=>Promise.all(Object.keys(r.f).reduce(((o,n)=>(r.f[n](e,o),o)),[])),r.u=e=>"js/"+e+"."+{169:"a5ec186cd838b778dd28",613:"d344745b0faa3507eada"}[e]+".js",r.miniCssF=e=>{},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var o=r.g.document;if(!e&&o&&(o.currentScript&&(e=o.currentScript.src),!e)){var n=o.getElementsByTagName("script");if(n.length)for(var t=n.length-1;t>-1&&!e;)e=n[t--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e+"../"})(),(()=>{var e={260:1};r.f.i=(o,n)=>{e[o]||importScripts(r.p+r.u(o))};var o=self.webpackChunkheta_online=self.webpackChunkheta_online||[],n=o.push.bind(o);o.push=o=>{var[t,a,i]=o;for(var s in a)r.o(a,s)&&(r.m[s]=a[s]);for(i&&i(r);t.length;)e[t.pop()]=1;n(o)}})(),o=r.x,r.x=()=>Promise.all([r.e(613),r.e(169)]).then(o);r.x()})();
//# sourceMappingURL=260.94a1b38854d1ac496ace.js.map