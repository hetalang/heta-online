{"version":3,"file":"js/260.66e46422c1ee80605910.js","mappings":"UAAIA,ECAAC,E,k4BCQJC,KAAKC,sBAAwBD,KAAKE,6BAC9BF,KAAKC,sBACTD,KAAKG,8BAAgCH,KAAKI,qCACtCJ,KAAKG,8BAET,IAAME,EAAS,IAAIC,eAEfC,EAAM,IAAIC,IAAJ,CAAQ,CAACC,WAAW,EAAMC,aAAa,IACjDH,EAAII,WAAW,CACXC,QAAS,UACTC,KAAM,WAGV,IAAMC,EAAWP,EAAIQ,QAAQC,GAEzBC,EAAiB,2KAAHC,OAGIC,EAAAA,KAAAA,IAA4B,wBAAAD,OACjCC,EAAAA,KAAAA,MAA8B,sHA2N/C,SAASC,EAAaC,EAAYC,GAC9B,IAAIC,EAASF,EAAWG,WAAWD,OAC/BE,EAAUC,IAAAA,QAAaJ,EAAmBK,SAAUN,EAAWO,UAC/DC,EAAM,iBAAHX,OAAoBO,EAAO,iBAAAP,OAAgBG,EAAWS,OAAM,QACnEP,EAAOQ,KAAKF,GAEFR,EAAWW,OAEjBC,SAAQ,SAACC,GACT,IACI,IAAIC,EAAWd,EAAWO,SAAWM,EAAIE,YASrD,SAAwBC,EAAgBC,EAASC,GAC7C,IAK0BC,EALtBC,EAAeH,EAAQI,MAAM,KAC7BC,EAAWF,EAAaG,MAGxBC,EAAeR,EAAeS,E,goBAAAC,CACpBN,GAAY,IAA1B,IAAAK,EAAAE,MAAAR,EAAAM,EAAAG,KAAAC,MAA4B,KAAnBC,EAACX,EAAAY,MACNP,EAAeA,EAAaQ,aAAaF,EAAG,CAACG,QAAQ,EAAMC,WAAW,GAC1E,CAAC,OAAAC,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CAEDb,EAAac,QAAQhB,EAAU,CAACW,QAAQ,EAAMC,WAAW,IACpDK,eACAC,MAAMtB,EACf,CArBYuB,CAAexC,EAAoBa,EAAU,IAAI4B,KAAK,CAAC7B,EAAI8B,UAC/D,CAAE,MAAOP,GACL,IAAI5B,EAAG,yCAAAX,OAA2CiB,EAAQ,aAAAjB,OAAYuC,EAAEQ,SACxE1C,EAAO2C,MAAMrC,EAAK,CAAChB,KAAM,eAC7B,CACJ,GACJ,CAxOAb,KAAKmE,UAAY,SAACC,GAEdC,YAAY,CAACC,OAAQ,UAAWlB,MAAO,aAAcmB,QAAQ,IAC7DF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,kEAAmEmB,QAAQ,IAGlH,IAAIC,EAAkBxE,KAAKG,8BAA8BiE,EAAIK,KAAKC,IAAM,kBAAkBC,OACtFC,EAAkBvE,EAAOwE,WAAWL,GACxC,IACI,IAAIM,EAAcC,KAAKC,MAAMJ,EACjC,CAAE,MAAOnB,GAKL,OAJAY,YAAY,CAACC,OAAQ,UAAWlB,MAAO,6CAA8CmB,QAAQ,IAC7FF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,SAAFlC,OAAWuC,EAAEQ,SAAWM,QAAQ,SAErEF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,SAAUmB,QAAQ,GAE7D,CAIA,IADYzD,EAASgE,GASjB,OAPAT,YAAY,CAACC,OAAQ,UAAWlB,MAAO,gCAAiCmB,QAAQ,IAChFzD,EAASmE,OAAOhD,SAAQ,SAACiD,GACrB,IAAIrD,EAAM,UAAHX,OAAagE,EAASC,aAAY,MAAAjE,OAAKgE,EAASjB,SACvDI,YAAY,CAACC,OAAQ,UAAWlB,MAAOvB,EAAK0C,QAAQ,GACxD,SAEAF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,SAAUmB,QAAQ,IAM7D,IADuBa,IAAAA,UAAiBjE,EAAAA,QAA6B2D,EAAYO,gBAK7E,OAHAhB,YAAY,CAACC,OAAQ,UAAWlB,MAAO,2BAAFlC,OAA6B4D,EAAYO,eAAc,iCAAAnE,OAAgCC,EAAAA,QAA2B,KAAKoD,QAAQ,SAEpKF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,SAAUmB,QAAQ,IAK7D,IACI,IAAIe,EAkBZ,SAAeZ,EAAKa,GAChB,IAAIC,EAAc,IAMdC,EAAI,IAAIC,EAAAA,UAMZD,EAAElE,OAAOoE,cAAa,SAACC,EAAO/D,EAAKgE,EAAKC,GACpC,IAAI1C,EAAQ,MAAHlC,OAAS0E,EAAK,OAAA1E,OAAMW,GAE7BwC,YAAY,CAACC,OAAQ,UAAWlB,MAAOA,EAAOmB,QAAQ,GAC1D,IAGA,IAAIwB,EAAerE,IAAAA,QAAa8D,GAC5BQ,EAAetE,IAAAA,QAAa8D,EAAaD,EAASU,QAAQC,SAC1DC,EAAezE,IAAAA,QAAa8D,EAAaD,EAASU,QAAQG,SAC1DC,EAAW3E,IAAAA,QAAa8D,EAAaD,EAASU,QAAQK,SAE1Db,EAAElE,OAAOQ,KAAK,2BAADb,OAA4BC,EAAAA,QAA2B,+BAAAD,OAA8B6E,EAAY,MAC1GR,EAASgB,IAAId,EAAElE,OAAOQ,KAAK,iBAADb,OAAkBqE,EAASgB,GAAE,MAK3Dd,EAAElE,OAAOQ,KAAK,0BAADb,OAA2BqE,EAASiB,aAAaC,OAAM,eAAAvF,OAAcqE,EAASiB,aAAa3F,KAAI,SAG5G,IAAI6F,EAAK,IAAIC,EAAAA,aAAalB,EAAElE,QAAQ,SAACoB,GACjC,IACI,IAAIgC,EAAO3E,KAAKG,8BAA8BuE,EAAM/B,GAAUgC,OAC1DiC,EAAcvG,EAAOwG,kBAAkBlC,EAC/C,CAAE,MAAOlB,GACL,MAAM,IAAIqD,MAAM,QAAD5F,OAASyB,EAAQ,kBACpC,CAEA,OAAOoE,EAAOC,KAAKJ,EACvB,IACIK,EAAcvF,IAAAA,KAAUqE,EAAcR,EAASiB,aAAaC,QAC5DS,EAAa3B,EAASiB,aAAa3F,KACvC6F,EAAGS,cAAcF,EAAaC,EAAY3B,EAASiB,cAG/CjB,EAASU,QAAQmB,OACjBC,OAAOC,OAAOZ,EAAGa,kBAAkBtF,SAAQ,SAACmB,GAC1C,IAAId,EAAUZ,IAAAA,SAAcqE,EAAc3C,EAAMT,SAAW,SACvDlB,EAAUC,IAAAA,KAAUyE,EAAc7D,GAClCkF,EAAMzC,KAAK0C,UAAUrE,EAAMsE,OAAQ,KAAM,GAC7CC,GAAGC,eAAenG,EAAS+F,GAC3B/B,EAAElE,OAAOQ,KAAK,0BAADb,OAA2BO,GAC1C,IAEJ,IAAIoG,EAAOnB,EAAGoB,YAkBd,GAfArC,EAAEsC,SAASF,GAAM,GAGjBpC,EAAElE,OAAOQ,KAAK,gDAAkD0D,EAAEuC,QAClEvC,EAAEwC,WAGFxC,EAAElE,OAAOQ,KAAK,gDACd0D,EAAEyC,kBAGFzC,EAAE0C,mBAIG1C,EAAElE,OAAO6G,UAwCV3C,EAAElE,OAAO8G,KAAK,gFAxCO,CAGjB9C,EAASU,QAAQqC,YACnB7C,EAAElE,OAAOQ,KAAK,gCACd0D,EAAE8C,cAEF9C,EAAElE,OAAO8G,KAAK,gFAIhB5C,EAAElE,OAAOQ,KAAK,0BACd0D,EAAE+C,aAIF,IAAIlH,EAAqBtB,KAAKG,8BAA8BuE,GACvDrB,aAAa2C,EAAc,CAAC1C,QAAQ,IAEzC,GAAIiC,EAASU,QAAQwC,WACjBhD,EAAElE,OAAO8G,KAAK,oDACX,GAAI9C,EAASU,QAAQyC,UAAW,CACnCjD,EAAElE,OAAO8G,KAAK,qBASdjH,EALiB,IAAIuH,EADTC,KAAKtD,UAAUuD,QAAe,OACf,CACvB/G,OAAQ,QACRF,SAAU,WAGWN,EAC7B,KAAO,CAEH,IAAIwH,EAAiBC,EAAItD,EAAEuD,eAAeC,KAAI,SAAC9F,GAAC,OAAKA,EAAE,EAAE,IACzDsC,EAAElE,OAAOQ,KAAK,oCAADb,OAAqC4H,EAAed,OAAM,MAEvEc,EAAe7G,SAAQ,SAACZ,GAAU,OAAKD,EAAaC,EAAYC,EAAmB,GACvF,CACF,CAKF,IAAI4H,EAAazD,EAAEyD,aAGnB,GAF6C,WAA7B3D,EAASU,QAAQkD,SACE,UAA7B5D,EAASU,QAAQkD,SAAuBD,EAAWlB,OAAS,EACnD,CACb,GACK,SADGzC,EAASU,QAAQmD,UAEvB,IAAIC,EAAOtE,KAAK0C,UAAUhC,EAAE6D,YAAa,KAAM,QAG/CD,EAAO5D,EAAE6D,YACNL,KAAI,SAAA9F,GAAC,UAAAjC,OAAQiC,EAAEyC,MAAK,OAAA1E,OAAMiC,EAAEtB,IAAG,IAC/B0H,KAAK,MAIVvJ,KAAKG,8BAA8BuE,GAChCf,QAAQ0C,EAAU,CAAC/C,QAAQ,IAC3BM,eACAC,MAAM,IAAIE,KAAK,CAACsF,GAAO,CAAExI,KAAM,gBAClC4E,EAAElE,OAAOQ,KAAK,gCAADb,OAAiCmF,EAAQ,KACxD,CAEKZ,EAAElE,OAAO6G,UAGV/D,YAAY,CAACC,OAAQ,OAAQgC,QAASD,IAFtChC,YAAY,CAACC,OAAQ,WAAYkF,KAAMxD,EAAcM,QAASD,IASlE,OAAOZ,CACX,CA3KwBgE,CAAMrF,EAAIK,KAAKC,IAAKI,EACxC,CAAE,MAAMZ,GAKJ,OAJAG,YAAY,CAACC,OAAQ,UAAWlB,MAAOnC,EAAiB,KAAMsD,QAAQ,IACtEF,YAAY,CAACC,OAAQ,UAAWlB,MAAOc,EAAMwF,MAAOnF,QAAQ,SAE5DF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,SAAUmB,QAAQ,GAE7D,CAEIe,EAAU4D,aAAalB,OAAS,EAChC3D,YAAY,CAACC,OAAQ,UAAWlB,MAAO,iCAAkCmB,QAAQ,IAEjFF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,oBAAqBmB,QAAQ,IAGxEF,YAAY,CAACC,OAAQ,UAAWlB,MAAO,SAAUmB,QAAQ,GAC7D,C,0CCxFIoF,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CACjDtD,GAAIsD,EACJK,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBN,GAAUO,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG3EK,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAJ,EAAoBS,EAAIF,EAGxBP,EAAoBzG,EAAI,KAGvB,IAAImH,EAAsBV,EAAoBW,OAAER,EAAW,CAAC,IAAI,MAAM,IAAOH,EAAoB,SAEjG,OADAU,EAAsBV,EAAoBW,EAAED,EAClB,ECpC3BV,EAAoBY,KAAO,WAC1B,MAAM,IAAI1D,MAAM,iCACjB,ECFA8C,EAAoBa,KAAO,CAAC,ELAxB3K,EAAW,GACf8J,EAAoBW,EAAI,CAACG,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIlL,EAASkI,OAAQgD,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAY/K,EAASkL,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAAS3C,OAAQkD,MACpB,EAAXL,GAAsBC,GAAgBD,IAAaxD,OAAO8D,KAAKvB,EAAoBW,GAAGa,OAAOC,GAASzB,EAAoBW,EAAEc,GAAKV,EAASO,MAC9IP,EAASW,OAAOJ,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbnL,EAASwL,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACEb,IAANwB,IAAiBb,EAASa,EAC/B,CACD,CACA,OAAOb,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIlL,EAASkI,OAAQgD,EAAI,GAAKlL,EAASkL,EAAI,GAAG,GAAKH,EAAUG,IAAKlL,EAASkL,GAAKlL,EAASkL,EAAI,GACrGlL,EAASkL,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,EMzBdjB,EAAoB3G,EAAKgH,IACxB,IAAIuB,EAASvB,GAAUA,EAAOwB,WAC7B,IAAOxB,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoB8B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLd5B,EAAoB8B,EAAI,CAAC1B,EAAS4B,KACjC,IAAI,IAAIP,KAAOO,EACXhC,EAAoBiC,EAAED,EAAYP,KAASzB,EAAoBiC,EAAE7B,EAASqB,IAC5EhE,OAAOyE,eAAe9B,EAASqB,EAAK,CAAEU,YAAY,EAAMC,IAAKJ,EAAWP,IAE1E,ECNDzB,EAAoBlG,EAAI,CAAC,EAGzBkG,EAAoBnG,EAAKwI,GACjBC,QAAQC,IAAI9E,OAAO8D,KAAKvB,EAAoBlG,GAAG0I,QAAO,CAACC,EAAUhB,KACvEzB,EAAoBlG,EAAE2H,GAAKY,EAASI,GAC7BA,IACL,KCNJzC,EAAoB0C,EAAKL,GAEjB,MAAQA,EAAU,IAAM,CAAC,IAAM,uBAAuB,IAAM,wBAAwBA,GAAW,MCFvGrC,EAAoB2C,SAAYN,IAEf,ECHjBrC,EAAoB4C,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO7D,MAAQ,IAAI8D,SAAS,cAAb,EAChB,CAAE,MAAOjJ,GACR,GAAsB,iBAAXkJ,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB/C,EAAoBiC,EAAI,CAACe,EAAKC,IAAUxF,OAAOyF,UAAUC,eAAe3C,KAAKwC,EAAKC,GCClFjD,EAAoB2B,EAAKvB,IACH,oBAAXgD,QAA0BA,OAAOC,aAC1C5F,OAAOyE,eAAe9B,EAASgD,OAAOC,YAAa,CAAE7J,MAAO,WAE7DiE,OAAOyE,eAAe9B,EAAS,aAAc,CAAE5G,OAAO,GAAO,ECL9DwG,EAAoBsD,IAAOjD,IAC1BA,EAAOkD,MAAQ,GACVlD,EAAOmD,WAAUnD,EAAOmD,SAAW,IACjCnD,G,MCHR,IAAIoD,EACAzD,EAAoB4C,EAAEc,gBAAeD,EAAYzD,EAAoB4C,EAAEe,SAAW,IACtF,IAAIC,EAAW5D,EAAoB4C,EAAEgB,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQ3F,OAEV,IADA,IAAIgD,EAAI2C,EAAQ3F,OAAS,EAClBgD,GAAK,IAAMqC,GAAWA,EAAYM,EAAQ3C,KAAK0C,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIvG,MAAM,yDAChCuG,EAAYA,EAAUQ,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjE,EAAoBkE,EAAIT,EAAY,K,WCdpC,IAAIU,EAAkB,CACrB,IAAK,GAgBNnE,EAAoBlG,EAAEsH,EAAI,CAACiB,EAASI,KAE/B0B,EAAgB9B,IAElBqB,cAAc1D,EAAoBkE,EAAIlE,EAAoB0C,EAAEL,GAE9D,EAGD,IAAI+B,EAAqBhO,KAA8B,wBAAIA,KAA8B,yBAAK,GAC1FiO,EAA6BD,EAAmBE,KAAKC,KAAKH,GAC9DA,EAAmBE,KAvBCzJ,IACnB,IAAKkG,EAAUyD,EAAaC,GAAW5J,EACvC,IAAI,IAAIoF,KAAYuE,EAChBxE,EAAoBiC,EAAEuC,EAAavE,KACrCD,EAAoBS,EAAER,GAAYuE,EAAYvE,IAIhD,IADGwE,GAASA,EAAQzE,GACde,EAAS3C,QACd+F,EAAgBpD,EAAS/H,OAAS,EACnCqL,EAA2BxJ,EAAK,C,KfnB7B1E,EAAO6J,EAAoBzG,EAC/ByG,EAAoBzG,EAAI,IAChB+I,QAAQC,IAAI,CAClBvC,EAAoBnG,EAAE,KACtBmG,EAAoBnG,EAAE,OACpB6K,KAAKvO,GgBJiB6J,EAAoBzG,G","sources":["webpack://heta-online/webpack/runtime/chunk loaded","webpack://heta-online/webpack/runtime/startup chunk dependencies","webpack://heta-online/./src/build.js","webpack://heta-online/webpack/bootstrap","webpack://heta-online/webpack/runtime/amd define","webpack://heta-online/webpack/runtime/amd options","webpack://heta-online/webpack/runtime/compat get default export","webpack://heta-online/webpack/runtime/define property getters","webpack://heta-online/webpack/runtime/ensure chunk","webpack://heta-online/webpack/runtime/get javascript chunk filename","webpack://heta-online/webpack/runtime/get mini-css chunk filename","webpack://heta-online/webpack/runtime/global","webpack://heta-online/webpack/runtime/hasOwnProperty shorthand","webpack://heta-online/webpack/runtime/make namespace object","webpack://heta-online/webpack/runtime/node module decorator","webpack://heta-online/webpack/runtime/publicPath","webpack://heta-online/webpack/runtime/importScripts chunk loading","webpack://heta-online/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(613),\n\t\t__webpack_require__.e(169)\n\t]).then(next);\n};","import { Container, ModuleSystem, Transpot } from 'heta-compiler/src/webpack';\nimport path from 'path';\nimport declarationSchema from 'heta-compiler/src/builder/declaration-schema.json';\nimport Ajv from 'ajv';\n//const ajvErrors = require('ajv-errors');\nimport hetaCompilerPackage from 'heta-compiler/package.json';\nimport semver from 'semver';\n\nself.requestFileSystemSync = self.webkitRequestFileSystemSync ||\n    self.requestFileSystemSync;\nself.resolveLocalFileSystemSyncURL = self.webkitResolveLocalFileSystemSyncURL ||\n    self.resolveLocalFileSystemSyncURL;\n\nconst reader = new FileReaderSync();\n\nlet ajv = new Ajv({allErrors: true, useDefaults: true});\najv.addKeyword({\n    keyword: \"example\",\n    type: \"string\",\n});\n//ajvErrors(ajv, {singleError: false}); // this is required for custom messages see https://ajv.js.org/packages/ajv-errors.html\nconst validate = ajv.compile(declarationSchema);\n\nlet contactMessage = `\n +-------------------------------------------------------------------+ \n | Internal \"Heta compiler\" error, contact the developers.           | \n | Create an issue: ${hetaCompilerPackage.bugs.url} | \n | or mail to: ${hetaCompilerPackage.bugs.email}                                     | \n +-------------------------------------------------------------------+ \n`;\n\nself.onmessage = (evt) => {\n    // first lines in console\n    postMessage({action: 'console', value: 'heta build', append: true});\n    postMessage({action: 'console', value: '\\nRunning compilation with declaration file \"/platform.json\"...', append: true});\n\n    // create declaration\n    let declarationFile = self.resolveLocalFileSystemSyncURL(evt.data.url + '/platform.json').file();\n    let declarationText = reader.readAsText(declarationFile);\n    try {\n        var declaration = JSON.parse(declarationText);\n    } catch (e) {\n        postMessage({action: 'console', value: `\\nDeclaration file must be JSON formatted:`, append: true});\n        postMessage({action: 'console', value: `\\n\\t- ${e.message}`, append: true});\n        \n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    // validate and set defaults\n    let valid = validate(declaration);\n    if (!valid) { // analyze errors\n        postMessage({action: 'console', value: '\\nErrors in declaration file:', append: true});\n        validate.errors.forEach((ajvError) => {\n            let msg = `\\n\\t- \"${ajvError.instancePath}\" ${ajvError.message}`;\n            postMessage({action: 'console', value: msg, append: true});\n        });\n\n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    // === wrong version throws, if no version stated than skip ===\n    let satisfiesVersion = semver.satisfies(hetaCompilerPackage.version, declaration.builderVersion);\n    if (!satisfiesVersion) {\n        postMessage({action: 'console', value: `\\nVersion requirements (${declaration.builderVersion}) don't meet builder version ${hetaCompilerPackage.version}.`, append: true});\n        \n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    // === this part displays \"send errors to developer\" message ===\n    try {\n        var container = build(evt.data.url, declaration);\n    } catch(error) {\n        postMessage({action: 'console', value: contactMessage + '\\n', append: true});\n        postMessage({action: 'console', value: error.stack, append: true});\n\n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    if (container.hetaErrors().length > 0) {\n        postMessage({action: 'console', value: '\\nCompilation ERROR! See logs.', append: true});\n    } else {\n        postMessage({action: 'console', value: '\\nCompilation OK!', append: true});\n    }\n\n    postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n};\n\nfunction build(url, settings) { // modules, exports\n    let coreDirname = '/';\n    /*\n        constructor()\n    */\n\n    // create container and logger\n    let c = new Container();\n    /*\n    c.logger.addTransport((level, msg, opt, levelNum) => { // temporal solution, all logs to console\n        console.log(`{heta-compiler} [${level}]\\t${msg}`);\n    });\n    */\n    c.logger.addTransport((level, msg, opt, levelNum) => {\n        let value = `\\n[${level}]\\t${msg}`;\n\n        postMessage({action: 'console', value: value, append: true});\n    });\n\n    // file paths\n    let _coreDirname = path.resolve(coreDirname);\n    let _distDirname = path.resolve(coreDirname, settings.options.distDir);\n    let _metaDirname = path.resolve(coreDirname, settings.options.metaDir);\n    let _logPath = path.resolve(coreDirname, settings.options.logPath);\n\n    c.logger.info(`Heta builder of version ${hetaCompilerPackage.version} initialized in directory \"${_coreDirname}\"`);\n    if (settings.id) c.logger.info(`Platform id: \"${settings.id}\"`);\n\n    /*\n        run()\n    */\n    c.logger.info(`Compilation of module \"${settings.importModule.source}\" of type \"${settings.importModule.type}\"...`);\n\n    // 1. Parsing\n    let ms = new ModuleSystem(c.logger, (filename) => {\n        try {\n            let file = self.resolveLocalFileSystemSyncURL(url + filename).file();\n            var arrayBuffer = reader.readAsArrayBuffer(file);\n        } catch (e) {\n            throw new Error(`File ${filename} is not found.`);\n        }\n        \n        return Buffer.from(arrayBuffer);\n    });\n    let absFilename = path.join(_coreDirname, settings.importModule.source);\n    let sourceType = settings.importModule.type;\n    ms.addModuleDeep(absFilename, sourceType, settings.importModule);\n\n    // 2. Modules integration\n    if (settings.options.debug) {\n        Object.values(ms.moduleCollection).forEach((value) => {\n          let relPath = path.relative(_coreDirname, value.filename + '.json');\n          let absPath = path.join(_metaDirname, relPath);\n          let str = JSON.stringify(value.parsed, null, 2);\n          fs.outputFileSync(absPath, str);\n          c.logger.info(`Meta file was saved to ${absPath}`);\n        });\n    }\n    let qArr = ms.integrate();\n    \n    // 3. Translation\n    c.loadMany(qArr, false);\n    \n    // 4. Binding\n    c.logger.info('Setting references in elements, total length ' + c.length);\n    c.knitMany();\n    \n    // 5. Circular start_ and ode_\n    c.logger.info('Checking for circular references in Records.');\n    c.checkCircRecord();\n    \n    // 6. check circ UnitDef\n    c.checkCircUnitDef();\n\n    \n    // === STOP if errors ===\n    if (!c.logger.hasErrors) {\n\n        // 7. Units checking\n        if (settings.options.unitsCheck) {\n          c.logger.info('Checking unit\\'s consistency.');\n          c.checkUnits();\n        } else {\n          c.logger.warn('Units checking skipped. To turn it on set \"unitsCheck: true\" in declaration.');\n        }\n\n        // 8. Terms checking\n        c.logger.info('Checking unit\\'s terms.');\n        c.checkTerms();\n\n        // 9. Exports\n        // create dist dir\n        var distDirectoryEntry = self.resolveLocalFileSystemSyncURL(url)\n            .getDirectory(_distDirname, {create: true});\n        // save\n        if (settings.options.skipExport) {\n            c.logger.warn('Exporting skipped as stated in declaration.');\n        } else if (settings.options.juliaOnly) {\n            c.logger.warn('\"Julia only\" mode');\n            //this.exportJuliaOnly(); \n            // create export without putting it to exportStorage\n            let Julia = this.container.classes['Julia'];\n            let exportItem = new Julia({\n                format: 'Julia',\n                filepath: '_julia'\n            });\n\n            _makeAndSave(exportItem, distDirectoryEntry);\n        } else {\n            //this.exportMany();\n            let exportElements = [...c.exportStorage].map((x) => x[1]);\n            c.logger.info(`Start exporting to files, total: ${exportElements.length}.`);\n\n            exportElements.forEach((exportItem) => _makeAndSave(exportItem, distDirectoryEntry));\n        }\n      } else {\n        c.logger.warn('Units checking and export were skipped because of errors in compilation.');\n      }\n\n    // 10. save logs if required\n    let hetaErrors = c.hetaErrors();\n    let createLog = settings.options.logMode === 'always' \n      || (settings.options.logMode === 'error' && hetaErrors.length > 0);\n    if (createLog) {\n      switch (settings.options.logFormat) {\n      case 'json':\n        var logs = JSON.stringify(c.defaultLogs, null, 2);\n        break;\n      default: \n        logs = c.defaultLogs\n          .map(x => `[${x.level}]\\t${x.msg}`)\n          .join('\\n');  \n      }\n\n      //fs.outputFileSync(_logPath, logs);\n      self.resolveLocalFileSystemSyncURL(url)\n        .getFile(_logPath, {create: true})\n        .createWriter()\n        .write(new Blob([logs], { type: \"text/plain\" }));\n      c.logger.info(`All logs was saved to file: \"${_logPath}\"`);\n    }\n\n    if (!c.logger.hasErrors) {\n        postMessage({action: 'finished', dist: _distDirname, logPath: _logPath});\n    } else {\n        postMessage({action: 'stop', logPath: _logPath});\n    }\n\n    // XXX: TEMP for testing\n    //let entries = distDirectoryEntry?.createReader().readEntries();\n    //console.log(entries);\n    \n    return c;\n}\n\nfunction _makeAndSave(exportItem, distDirectoryEntry) {\n    let logger = exportItem._container.logger;\n    let absPath = path.resolve(distDirectoryEntry.fullPath, exportItem.filepath); // /dist/matlab\n    let msg = `Exporting to \"${absPath}\" of format \"${exportItem.format}\"...`;\n    logger.info(msg);\n\n    let mmm = exportItem.make();\n\n    mmm.forEach((out) => {\n        try {\n            var fileName = exportItem.filepath + out.pathSuffix;\n            _writeFileDeep(distDirectoryEntry, fileName, new Blob([out.content]));\n        } catch (e) {\n            let msg =`Heta compiler cannot export to file: \"${fileName}\": \\n\\t- ${e.message}`;\n            logger.error(msg, {type: 'ExportError'});\n        }\n    });\n}\n\nfunction _writeFileDeep(directoryEntry, relPath, blob) {\n    let relPathArray = relPath.split('/');\n    let filename = relPathArray.pop();\n\n    // create directory deep\n    let currentEntry = directoryEntry;\n    for (let x of relPathArray) {\n        currentEntry = currentEntry.getDirectory(x, {create: true, exclusive: false})\n    }\n\n    currentEntry.getFile(filename, {create: true, exclusive: true})\n        .createWriter()\n        .write(blob);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [613,169], () => (__webpack_require__(74189)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"169\":\"a5ec186cd838b778dd28\",\"613\":\"d344745b0faa3507eada\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t260: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkheta_online\"] = self[\"webpackChunkheta_online\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","self","requestFileSystemSync","webkitRequestFileSystemSync","resolveLocalFileSystemSyncURL","webkitResolveLocalFileSystemSyncURL","reader","FileReaderSync","ajv","Ajv","allErrors","useDefaults","addKeyword","keyword","type","validate","compile","declarationSchema","contactMessage","concat","hetaCompilerPackage","_makeAndSave","exportItem","distDirectoryEntry","logger","_container","absPath","path","fullPath","filepath","msg","format","info","make","forEach","out","fileName","pathSuffix","directoryEntry","relPath","blob","_step","relPathArray","split","filename","pop","currentEntry","_iterator","_createForOfIteratorHelper","s","n","done","x","value","getDirectory","create","exclusive","err","e","f","getFile","createWriter","write","_writeFileDeep","Blob","content","message","error","onmessage","evt","postMessage","action","append","declarationFile","data","url","file","declarationText","readAsText","declaration","JSON","parse","errors","ajvError","instancePath","semver","builderVersion","container","settings","coreDirname","c","Container","addTransport","level","opt","levelNum","_coreDirname","_distDirname","options","distDir","_metaDirname","metaDir","_logPath","logPath","id","importModule","source","ms","ModuleSystem","arrayBuffer","readAsArrayBuffer","Error","Buffer","from","absFilename","sourceType","addModuleDeep","debug","Object","values","moduleCollection","str","stringify","parsed","fs","outputFileSync","qArr","integrate","loadMany","length","knitMany","checkCircRecord","checkCircUnitDef","hasErrors","warn","unitsCheck","checkUnits","checkTerms","skipExport","juliaOnly","Julia","this","classes","exportElements","_toConsumableArray","exportStorage","map","hetaErrors","logMode","logFormat","logs","defaultLogs","join","dist","build","stack","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","__webpack_exports__","O","amdD","amdO","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","replace","p","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","then"],"sourceRoot":""}