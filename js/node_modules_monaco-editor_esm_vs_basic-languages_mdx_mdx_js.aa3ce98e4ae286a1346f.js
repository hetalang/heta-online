"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkheta_online"] = self["webpackChunkheta_online"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_mdx_mdx_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/mdx/mdx.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/mdx/mdx.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"include-loader!./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.41.0(38e1e3d097f84e336c311d071a9ffb5191d4ffd1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// src/basic-languages/mdx/mdx.ts\nvar conf = {\n  comments: {\n    blockComment: [\"{/*\", \"*/}\"]\n  },\n  brackets: [[\"{\", \"}\"]],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"\\u201C\",\n    close: \"\\u201D\"\n  }, {\n    open: \"\\u2018\",\n    close: \"\\u2019\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }, {\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"_\",\n    close: \"_\"\n  }, {\n    open: \"**\",\n    close: \"**\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }],\n  onEnterRules: [{\n    beforeText: /^\\s*- .+/,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.None,\n      appendText: \"- \"\n    }\n  }, {\n    beforeText: /^\\s*\\+ .+/,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.None,\n      appendText: \"+ \"\n    }\n  }, {\n    beforeText: /^\\s*\\* .+/,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.None,\n      appendText: \"* \"\n    }\n  }, {\n    beforeText: /^> /,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.None,\n      appendText: \"> \"\n    }\n  }, {\n    beforeText: /<\\w+/,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }, {\n    beforeText: /\\s+>\\s*$/,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }, {\n    beforeText: /<\\/\\w+>/,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Outdent\n    }\n  }, ...Array.from({\n    length: 100\n  }, (_, index) => ({\n    beforeText: new RegExp(`^${index}\\\\. .+`),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.None,\n      appendText: `${index + 1}. `\n    }\n  }))]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".mdx\",\n  control: /[!#()*+.[\\\\\\]_`{}\\-]/,\n  escapes: /\\\\@control/,\n  tokenizer: {\n    root: [[/^---$/, {\n      token: \"meta.content\",\n      next: \"@frontmatter\",\n      nextEmbedded: \"yaml\"\n    }], [/^\\s*import/, {\n      token: \"keyword\",\n      next: \"@import\",\n      nextEmbedded: \"js\"\n    }], [/^\\s*export/, {\n      token: \"keyword\",\n      next: \"@export\",\n      nextEmbedded: \"js\"\n    }], [/<\\w+/, {\n      token: \"type.identifier\",\n      next: \"@jsx\"\n    }], [/<\\/?\\w+>/, \"type.identifier\"], [/^(\\s*)(>*\\s*)(#{1,6}\\s)/, [{\n      token: \"white\"\n    }, {\n      token: \"comment\"\n    }, {\n      token: \"keyword\",\n      next: \"@header\"\n    }]], [/^(\\s*)(>*\\s*)([*+-])(\\s+)/, [\"white\", \"comment\", \"keyword\", \"white\"]], [/^(\\s*)(>*\\s*)(\\d{1,9}\\.)(\\s+)/, [\"white\", \"comment\", \"number\", \"white\"]], [/^(\\s*)(>*\\s*)(\\d{1,9}\\.)(\\s+)/, [\"white\", \"comment\", \"number\", \"white\"]], [/^(\\s*)(>*\\s*)(-{3,}|\\*{3,}|_{3,})$/, [\"white\", \"comment\", \"keyword\"]], [/`{3,}(\\s.*)?$/, {\n      token: \"string\",\n      next: \"@codeblock_backtick\"\n    }], [/~{3,}(\\s.*)?$/, {\n      token: \"string\",\n      next: \"@codeblock_tilde\"\n    }], [/`{3,}(\\S+).*$/, {\n      token: \"string\",\n      next: \"@codeblock_highlight_backtick\",\n      nextEmbedded: \"$1\"\n    }], [/~{3,}(\\S+).*$/, {\n      token: \"string\",\n      next: \"@codeblock_highlight_tilde\",\n      nextEmbedded: \"$1\"\n    }], [/^(\\s*)(-{4,})$/, [\"white\", \"comment\"]], [/^(\\s*)(>+)/, [\"white\", \"comment\"]], {\n      include: \"content\"\n    }],\n    content: [[/(\\[)(.+)(]\\()(.+)(\\s+\".*\")(\\))/, [\"\", \"string.link\", \"\", \"type.identifier\", \"string.link\", \"\"]], [/(\\[)(.+)(]\\()(.+)(\\))/, [\"\", \"type.identifier\", \"\", \"string.link\", \"\"]], [/(\\[)(.+)(]\\[)(.+)(])/, [\"\", \"type.identifier\", \"\", \"type.identifier\", \"\"]], [/(\\[)(.+)(]:\\s+)(\\S*)/, [\"\", \"type.identifier\", \"\", \"string.link\"]], [/(\\[)(.+)(])/, [\"\", \"type.identifier\", \"\"]], [/`.*`/, \"variable.source\"], [/_/, {\n      token: \"emphasis\",\n      next: \"@emphasis_underscore\"\n    }], [/\\*(?!\\*)/, {\n      token: \"emphasis\",\n      next: \"@emphasis_asterisk\"\n    }], [/\\*\\*/, {\n      token: \"strong\",\n      next: \"@strong\"\n    }], [/{/, {\n      token: \"delimiter.bracket\",\n      next: \"@expression\",\n      nextEmbedded: \"js\"\n    }]],\n    import: [[/'\\s*(;|$)/, {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    expression: [[/{/, {\n      token: \"delimiter.bracket\",\n      next: \"@expression\"\n    }], [/}/, {\n      token: \"delimiter.bracket\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    export: [[/^\\s*$/, {\n      token: \"delimiter.bracket\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    jsx: [[/\\s+/, \"\"], [/(\\w+)(=)(\"(?:[^\"\\\\]|\\\\.)*\")/, [\"attribute.name\", \"operator\", \"string\"]], [/(\\w+)(=)('(?:[^'\\\\]|\\\\.)*')/, [\"attribute.name\", \"operator\", \"string\"]], [/(\\w+(?=\\s|>|={|$))/, [\"attribute.name\"]], [/={/, {\n      token: \"delimiter.bracket\",\n      next: \"@expression\",\n      nextEmbedded: \"js\"\n    }], [/>/, {\n      token: \"type.identifier\",\n      next: \"@pop\"\n    }]],\n    header: [[/.$/, {\n      token: \"keyword\",\n      next: \"@pop\"\n    }], {\n      include: \"content\"\n    }, [/./, {\n      token: \"keyword\"\n    }]],\n    strong: [[/\\*\\*/, {\n      token: \"strong\",\n      next: \"@pop\"\n    }], {\n      include: \"content\"\n    }, [/./, {\n      token: \"strong\"\n    }]],\n    emphasis_underscore: [[/_/, {\n      token: \"emphasis\",\n      next: \"@pop\"\n    }], {\n      include: \"content\"\n    }, [/./, {\n      token: \"emphasis\"\n    }]],\n    emphasis_asterisk: [[/\\*(?!\\*)/, {\n      token: \"emphasis\",\n      next: \"@pop\"\n    }], {\n      include: \"content\"\n    }, [/./, {\n      token: \"emphasis\"\n    }]],\n    frontmatter: [[/^---$/, {\n      token: \"meta.content\",\n      nextEmbedded: \"@pop\",\n      next: \"@pop\"\n    }]],\n    codeblock_highlight_backtick: [[/\\s*`{3,}\\s*$/, {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/.*$/, \"variable.source\"]],\n    codeblock_highlight_tilde: [[/\\s*~{3,}\\s*$/, {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/.*$/, \"variable.source\"]],\n    codeblock_backtick: [[/\\s*`{3,}\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/.*$/, \"variable.source\"]],\n    codeblock_tilde: [[/\\s*~{3,}\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/.*$/, \"variable.source\"]]\n  }\n};\n\n\n//# sourceURL=webpack://heta-online/./node_modules/monaco-editor/esm/vs/basic-languages/mdx/mdx.js?");

/***/ })

}]);