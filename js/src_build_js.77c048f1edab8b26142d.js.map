{"version":3,"file":"js/src_build_js.77c048f1edab8b26142d.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8E;AACtD;AAC0D;AAC5D;AACtB;AAC6D;AACjC;AAE5BQ,IAAI,CAACC,qBAAqB,GAAGD,IAAI,CAACE,2BAA2B,IACzDF,IAAI,CAACC,qBAAqB;AAC9BD,IAAI,CAACG,6BAA6B,GAAGH,IAAI,CAACI,mCAAmC,IACzEJ,IAAI,CAACG,6BAA6B;AAEtC,IAAME,MAAM,GAAG,IAAIC,cAAc,CAAC,CAAC;AAEnC,IAAIC,GAAG,GAAG,IAAIV,4CAAG,CAAC;EAACW,SAAS,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAI,CAAC,CAAC;AACvDF,GAAG,CAACG,UAAU,CAAC;EACXC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE;AACV,CAAC,CAAC;AACF;AACA,IAAMC,QAAQ,GAAGN,GAAG,CAACO,OAAO,CAAClB,8EAAiB,CAAC;AAE/C,IAAImB,cAAc,gLAAAC,MAAA,CAGIlB,gEAA4B,0BAAAkB,MAAA,CACjClB,kEAA8B,uHAE9C;AAEDE,IAAI,CAACoB,SAAS,GAAG,UAACC,GAAG,EAAK;EACtB;EACAC,WAAW,CAAC;IAACC,MAAM,EAAE,SAAS;IAAEC,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EACnEH,WAAW,CAAC;IAACC,MAAM,EAAE,SAAS;IAAEC,KAAK,EAAE,iEAAiE;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;;EAExH;EACA,IAAIC,eAAe,GAAG1B,IAAI,CAACG,6BAA6B,CAACkB,GAAG,CAACM,IAAI,CAACT,GAAG,GAAG,gBAAgB,CAAC,CAACU,IAAI,CAAC,CAAC;EAChG,IAAIC,eAAe,GAAGxB,MAAM,CAACyB,UAAU,CAACJ,eAAe,CAAC;EACxD,IAAI;IACA,IAAIK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC;EACjD,CAAC,CAAC,OAAOK,CAAC,EAAE;IACRZ,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,8CAA8C;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IACnGH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,WAAAR,MAAA,CAAWkB,CAAC,CAACC,OAAO,CAAE;MAAEV,MAAM,EAAE;IAAI,CAAC,CAAC;IAE3EH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IAC/D;EACJ;;EAEA;EACA,IAAIW,KAAK,GAAGvB,QAAQ,CAACkB,WAAW,CAAC;EACjC,IAAI,CAACK,KAAK,EAAE;IAAE;IACVd,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,+BAA+B;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IACtFZ,QAAQ,CAACwB,MAAM,CAACC,OAAO,CAAC,UAACC,QAAQ,EAAK;MAClC,IAAIC,GAAG,cAAAxB,MAAA,CAAauB,QAAQ,CAACE,YAAY,SAAAzB,MAAA,CAAKuB,QAAQ,CAACJ,OAAO,CAAE;MAChEb,WAAW,CAAC;QAACC,MAAM,EAAE,SAAS;QAAEC,KAAK,EAAEgB,GAAG;QAAEf,MAAM,EAAE;MAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEFH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IAC/D;EACJ;;EAEA;EACA,IAAIiB,gBAAgB,GAAG3C,uDAAgB,CAACD,+DAA2B,EAAEiC,WAAW,CAACc,cAAc,CAAC;EAChG,IAAI,CAACH,gBAAgB,EAAE;IACnBpB,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,6BAAAR,MAAA,CAA6Be,WAAW,CAACc,cAAc,mCAAA7B,MAAA,CAAgClB,+DAA2B,MAAG;MAAE2B,MAAM,EAAE;IAAI,CAAC,CAAC;IAE1KH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IAC/D;EACJ;;EAEA;EACA,IAAI;IACA,IAAIqB,SAAS,GAAGC,KAAK,CAAC1B,GAAG,CAACM,IAAI,CAACT,GAAG,EAAEa,WAAW,CAAC;EACpD,CAAC,CAAC,OAAMiB,KAAK,EAAE;IACX1B,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAET,cAAc,GAAG,IAAI;MAAEU,MAAM,EAAE;IAAI,CAAC,CAAC;IAC5EH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAEwB,KAAK,CAACC,KAAK;MAAExB,MAAM,EAAE;IAAI,CAAC,CAAC;IAElEH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IAC/D;EACJ;EAEA,IAAIqB,SAAS,CAACI,UAAU,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IACnC7B,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,gCAAgC;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3F,CAAC,MAAM;IACHH,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9E;EAEAH,WAAW,CAAC;IAACC,MAAM,EAAE,SAAS;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;AACnE,CAAC;AAED,SAASsB,KAAKA,CAAC7B,GAAG,EAAEkC,QAAQ,EAAE;EAAE;EAC5B,IAAIC,WAAW,GAAG,GAAG;EACrB;AACJ;AACA;;EAEI;EACA,IAAIC,CAAC,GAAG,IAAI9D,gEAAS,CAAC,CAAC;EACvB;AACJ;AACA;AACA;AACA;EACI8D,CAAC,CAACC,MAAM,CAACC,YAAY,CAAC,UAACC,KAAK,EAAEjB,GAAG,EAAEkB,GAAG,EAAEC,QAAQ,EAAK;IACjD,IAAInC,KAAK,SAAAR,MAAA,CAASyC,KAAK,SAAAzC,MAAA,CAAMwB,GAAG,CAAE;IAElClB,WAAW,CAAC;MAACC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAChE,CAAC,CAAC;;EAEF;EACA,IAAImC,YAAY,GAAGjE,mDAAY,CAAC0D,WAAW,CAAC;EAC5C,IAAIS,YAAY,GAAGnE,mDAAY,CAAC0D,WAAW,EAAED,QAAQ,CAACW,OAAO,CAACC,OAAO,CAAC;EACtE,IAAIC,YAAY,GAAGtE,mDAAY,CAAC0D,WAAW,EAAED,QAAQ,CAACW,OAAO,CAACG,OAAO,CAAC;EACtE,IAAIC,QAAQ,GAAGxE,mDAAY,CAAC0D,WAAW,EAAED,QAAQ,CAACW,OAAO,CAACK,OAAO,CAAC;EAElEd,CAAC,CAACC,MAAM,CAACc,IAAI,4BAAArD,MAAA,CAA4BlB,+DAA2B,kCAAAkB,MAAA,CAA8B4C,YAAY,OAAG,CAAC;EAClH,IAAIR,QAAQ,CAACkB,EAAE,EAAEhB,CAAC,CAACC,MAAM,CAACc,IAAI,mBAAArD,MAAA,CAAkBoC,QAAQ,CAACkB,EAAE,OAAG,CAAC;;EAE/D;AACJ;AACA;EACIhB,CAAC,CAACC,MAAM,CAACc,IAAI,4BAAArD,MAAA,CAA2BoC,QAAQ,CAACmB,YAAY,CAACC,MAAM,mBAAAxD,MAAA,CAAcoC,QAAQ,CAACmB,YAAY,CAAC3D,IAAI,UAAM,CAAC;;EAEnH;EACA,IAAI6D,EAAE,GAAG,IAAIhF,mEAAY,CAAC6D,CAAC,CAACC,MAAM,EAAE,UAACmB,QAAQ,EAAK;IAC9C,IAAI;MACA,IAAI9C,IAAI,GAAG5B,IAAI,CAACG,6BAA6B,CAACe,GAAG,GAAGwD,QAAQ,CAAC,CAAC9C,IAAI,CAAC,CAAC;MACpE,IAAI+C,WAAW,GAAGtE,MAAM,CAACuE,iBAAiB,CAAChD,IAAI,CAAC;IACpD,CAAC,CAAC,OAAOM,CAAC,EAAE;MACR,MAAM,IAAI2C,KAAK,SAAA7D,MAAA,CAAS0D,QAAQ,mBAAgB,CAAC;IACrD;IAEA,OAAOI,MAAM,CAACC,IAAI,CAACJ,WAAW,CAAC;EACnC,CAAC,CAAC;EACF,IAAIK,WAAW,GAAGrF,gDAAS,CAACiE,YAAY,EAAER,QAAQ,CAACmB,YAAY,CAACC,MAAM,CAAC;EACvE,IAAIU,UAAU,GAAG9B,QAAQ,CAACmB,YAAY,CAAC3D,IAAI;EAC3C6D,EAAE,CAACU,aAAa,CAACH,WAAW,EAAEE,UAAU,EAAE9B,QAAQ,CAACmB,YAAY,CAAC;;EAEhE;EACA,IAAInB,QAAQ,CAACW,OAAO,CAACqB,KAAK,EAAE;IACxBC,MAAM,CAACC,MAAM,CAACb,EAAE,CAACc,gBAAgB,CAAC,CAACjD,OAAO,CAAC,UAACd,KAAK,EAAK;MACpD,IAAIgE,OAAO,GAAG7F,oDAAa,CAACiE,YAAY,EAAEpC,KAAK,CAACkD,QAAQ,GAAG,OAAO,CAAC;MACnE,IAAIgB,OAAO,GAAG/F,gDAAS,CAACsE,YAAY,EAAEuB,OAAO,CAAC;MAC9C,IAAIG,GAAG,GAAG3D,IAAI,CAAC4D,SAAS,CAACpE,KAAK,CAACqE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;MAC/CC,EAAE,CAACC,cAAc,CAACL,OAAO,EAAEC,GAAG,CAAC;MAC/BrC,CAAC,CAACC,MAAM,CAACc,IAAI,2BAAArD,MAAA,CAA2B0E,OAAO,CAAE,CAAC;IACpD,CAAC,CAAC;EACN;EACA,IAAIM,IAAI,GAAGvB,EAAE,CAACwB,SAAS,CAAC,CAAC;;EAEzB;EACA3C,CAAC,CAAC4C,QAAQ,CAACF,IAAI,EAAE,KAAK,CAAC;;EAEvB;EACA1C,CAAC,CAACC,MAAM,CAACc,IAAI,CAAC,+CAA+C,GAAGf,CAAC,CAACH,MAAM,CAAC;EACzEG,CAAC,CAAC6C,QAAQ,CAAC,CAAC;;EAEZ;EACA7C,CAAC,CAACC,MAAM,CAACc,IAAI,CAAC,8CAA8C,CAAC;EAC7Df,CAAC,CAAC8C,eAAe,CAAC,CAAC;;EAEnB;EACA9C,CAAC,CAAC+C,gBAAgB,CAAC,CAAC;;EAGpB;EACA,IAAI,CAAC/C,CAAC,CAACC,MAAM,CAAC+C,SAAS,EAAE;IAErB;IACA,IAAIlD,QAAQ,CAACW,OAAO,CAACwC,UAAU,EAAE;MAC/BjD,CAAC,CAACC,MAAM,CAACc,IAAI,CAAC,+BAA+B,CAAC;MAC9Cf,CAAC,CAACkD,UAAU,CAAC,CAAC;IAChB,CAAC,MAAM;MACLlD,CAAC,CAACC,MAAM,CAACkD,IAAI,CAAC,8EAA8E,CAAC;IAC/F;;IAEA;IACAnD,CAAC,CAACC,MAAM,CAACc,IAAI,CAAC,yBAAyB,CAAC;IACxCf,CAAC,CAACoD,UAAU,CAAC,CAAC;;IAEd;IACA;IACA,IAAIC,kBAAkB,GAAG3G,IAAI,CAACG,6BAA6B,CAACe,GAAG,CAAC,CAC3D0F,YAAY,CAAC9C,YAAY,EAAE;MAAC+C,MAAM,EAAE;IAAI,CAAC,CAAC;IAC/C;IACA,IAAIzD,QAAQ,CAACW,OAAO,CAAC+C,UAAU,EAAE;MAC7BxD,CAAC,CAACC,MAAM,CAACkD,IAAI,CAAC,6CAA6C,CAAC;IAChE,CAAC,MAAM,IAAIrD,QAAQ,CAACW,OAAO,CAACgD,SAAS,EAAE;MACnCzD,CAAC,CAACC,MAAM,CAACkD,IAAI,CAAC,mBAAmB,CAAC;MAClC;MACA;MACA,IAAIO,KAAK,GAAG,IAAI,CAAClE,SAAS,CAACmE,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIC,UAAU,GAAG,IAAIF,KAAK,CAAC;QACvBG,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE;MACd,CAAC,CAAC;MAEFC,YAAY,CAACH,UAAU,EAAEP,kBAAkB,CAAC;IAChD,CAAC,MAAM;MACH;MACA,IAAIW,cAAc,GAAGC,kBAAA,CAAIjE,CAAC,CAACkE,aAAa,EAAEC,GAAG,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAAC,CAAC,CAAC;MAAA,EAAC;MAC1DpE,CAAC,CAACC,MAAM,CAACc,IAAI,qCAAArD,MAAA,CAAqCsG,cAAc,CAACnE,MAAM,MAAG,CAAC;MAE3EmE,cAAc,CAAChF,OAAO,CAAC,UAAC4E,UAAU;QAAA,OAAKG,YAAY,CAACH,UAAU,EAAEP,kBAAkB,CAAC;MAAA,EAAC;IACxF;EACF,CAAC,MAAM;IACLrD,CAAC,CAACC,MAAM,CAACkD,IAAI,CAAC,0EAA0E,CAAC;EAC3F;;EAEF;EACA,IAAIvD,UAAU,GAAGI,CAAC,CAACJ,UAAU,CAAC,CAAC;EAC/B,IAAIyE,SAAS,GAAGvE,QAAQ,CAACW,OAAO,CAAC6D,OAAO,KAAK,QAAQ,IAC/CxE,QAAQ,CAACW,OAAO,CAAC6D,OAAO,KAAK,OAAO,IAAI1E,UAAU,CAACC,MAAM,GAAG,CAAE;EACpE,IAAIwE,SAAS,EAAE;IACb,QAAQvE,QAAQ,CAACW,OAAO,CAAC8D,SAAS;MAClC,KAAK,MAAM;QACT,IAAIC,IAAI,GAAG9F,IAAI,CAAC4D,SAAS,CAACtC,CAAC,CAACyE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;QACjD;MACF;QACED,IAAI,GAAGxE,CAAC,CAACyE,WAAW,CACjBN,GAAG,CAAC,UAAAC,CAAC;UAAA,WAAA1G,MAAA,CAAQ0G,CAAC,CAACjE,KAAK,SAAAzC,MAAA,CAAM0G,CAAC,CAAClF,GAAG;QAAA,CAAE,CAAC,CAClCyC,IAAI,CAAC,IAAI,CAAC;IACf;;IAEA;IACAjF,IAAI,CAACG,6BAA6B,CAACe,GAAG,CAAC,CACpC8G,OAAO,CAAC7D,QAAQ,EAAE;MAAC0C,MAAM,EAAE;IAAI,CAAC,CAAC,CACjCoB,YAAY,CAAC,CAAC,CACdC,KAAK,CAAC,IAAIC,IAAI,CAAC,CAACL,IAAI,CAAC,EAAE;MAAElH,IAAI,EAAE;IAAa,CAAC,CAAC,CAAC;IAClD0C,CAAC,CAACC,MAAM,CAACc,IAAI,kCAAArD,MAAA,CAAiCmD,QAAQ,OAAG,CAAC;EAC5D;EAEA,IAAI,CAACb,CAAC,CAACC,MAAM,CAAC+C,SAAS,EAAE;IACrBhF,WAAW,CAAC;MAACC,MAAM,EAAE,UAAU;MAAE6G,IAAI,EAAEtE,YAAY;MAAEM,OAAO,EAAED;IAAQ,CAAC,CAAC;EAC5E,CAAC,MAAM;IACH7C,WAAW,CAAC;MAACC,MAAM,EAAE,MAAM;MAAE6C,OAAO,EAAED;IAAQ,CAAC,CAAC;EACpD;;EAEA;EACA;EACA;;EAEA,OAAOb,CAAC;AACZ;AAEA,SAAS+D,YAAYA,CAACH,UAAU,EAAEP,kBAAkB,EAAE;EAClD,IAAIpD,MAAM,GAAG2D,UAAU,CAACmB,UAAU,CAAC9E,MAAM;EACzC,IAAImC,OAAO,GAAG/F,mDAAY,CAACgH,kBAAkB,CAAC2B,QAAQ,EAAEpB,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC9E,IAAI5E,GAAG,qBAAAxB,MAAA,CAAoB0E,OAAO,qBAAA1E,MAAA,CAAgBkG,UAAU,CAACC,MAAM,UAAM;EACzE5D,MAAM,CAACc,IAAI,CAAC7B,GAAG,CAAC;EAEhB,IAAI+F,GAAG,GAAGrB,UAAU,CAACsB,IAAI,CAAC,CAAC;EAE3BD,GAAG,CAACjG,OAAO,CAAC,UAACmG,GAAG,EAAK;IACjB,IAAI;MACA,IAAIC,QAAQ,GAAGxB,UAAU,CAACE,QAAQ,GAAGqB,GAAG,CAACE,UAAU;MACnDC,cAAc,CAACjC,kBAAkB,EAAE+B,QAAQ,EAAE,IAAIP,IAAI,CAAC,CAACM,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC,OAAO3G,CAAC,EAAE;MACR,IAAIM,IAAG,6CAAAxB,MAAA,CAA2C0H,QAAQ,gBAAA1H,MAAA,CAAYkB,CAAC,CAACC,OAAO,CAAE;MACjFoB,MAAM,CAACP,KAAK,CAACR,IAAG,EAAE;QAAC5B,IAAI,EAAE;MAAa,CAAC,CAAC;IAC5C;EACJ,CAAC,CAAC;AACN;AAEA,SAASgI,cAAcA,CAACE,cAAc,EAAEtD,OAAO,EAAEuD,IAAI,EAAE;EACnD,IAAIC,YAAY,GAAGxD,OAAO,CAACyD,KAAK,CAAC,GAAG,CAAC;EACrC,IAAIvE,QAAQ,GAAGsE,YAAY,CAACE,GAAG,CAAC,CAAC;;EAEjC;EACA,IAAIC,YAAY,GAAGL,cAAc;EAAC,IAAAM,SAAA,GAAAC,0BAAA,CACpBL,YAAY;IAAAM,KAAA;EAAA;IAA1B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA4B;MAAA,IAAnB/B,CAAC,GAAA4B,KAAA,CAAA9H,KAAA;MACN2H,YAAY,GAAGA,YAAY,CAACvC,YAAY,CAACc,CAAC,EAAE;QAACb,MAAM,EAAE,IAAI;QAAE6C,SAAS,EAAE;MAAK,CAAC,CAAC;IACjF;EAAC,SAAAC,GAAA;IAAAP,SAAA,CAAAlH,CAAA,CAAAyH,GAAA;EAAA;IAAAP,SAAA,CAAAQ,CAAA;EAAA;EAEDT,YAAY,CAACnB,OAAO,CAACtD,QAAQ,EAAE;IAACmC,MAAM,EAAE,IAAI;IAAE6C,SAAS,EAAE;EAAI,CAAC,CAAC,CAC1DzB,YAAY,CAAC,CAAC,CACdC,KAAK,CAACa,IAAI,CAAC;AACpB;;;;;;;;;;ACtRA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WCrCA;WACA;WACA;;;;;WCFA;;;;;WCAA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://heta-online/./src/build.js","webpack://heta-online/ignored|/home/runner/work/heta-online/heta-online/node_modules/readable-stream/lib/internal/streams|util","webpack://heta-online/ignored|/home/runner/work/heta-online/heta-online/node_modules/readable-stream/lib|util","webpack://heta-online/ignored|/home/runner/work/heta-online/heta-online/node_modules/seedrandom|crypto","webpack://heta-online/webpack/bootstrap","webpack://heta-online/webpack/runtime/amd define","webpack://heta-online/webpack/runtime/amd options","webpack://heta-online/webpack/runtime/chunk loaded","webpack://heta-online/webpack/runtime/compat get default export","webpack://heta-online/webpack/runtime/define property getters","webpack://heta-online/webpack/runtime/ensure chunk","webpack://heta-online/webpack/runtime/get javascript chunk filename","webpack://heta-online/webpack/runtime/global","webpack://heta-online/webpack/runtime/hasOwnProperty shorthand","webpack://heta-online/webpack/runtime/make namespace object","webpack://heta-online/webpack/runtime/node module decorator","webpack://heta-online/webpack/runtime/publicPath","webpack://heta-online/webpack/runtime/importScripts chunk loading","webpack://heta-online/webpack/runtime/startup chunk dependencies","webpack://heta-online/webpack/before-startup","webpack://heta-online/webpack/startup","webpack://heta-online/webpack/after-startup"],"sourcesContent":["import { Container, ModuleSystem, Transpot } from 'heta-compiler/src/webpack';\nimport path from 'path';\nimport declarationSchema from 'heta-compiler/src/builder/declaration-schema.json';\nimport Ajv from 'ajv';\n//const ajvErrors = require('ajv-errors');\nimport hetaCompilerPackage from 'heta-compiler/package.json';\nimport semver from 'semver';\n\nself.requestFileSystemSync = self.webkitRequestFileSystemSync ||\n    self.requestFileSystemSync;\nself.resolveLocalFileSystemSyncURL = self.webkitResolveLocalFileSystemSyncURL ||\n    self.resolveLocalFileSystemSyncURL;\n\nconst reader = new FileReaderSync();\n\nlet ajv = new Ajv({allErrors: true, useDefaults: true});\najv.addKeyword({\n    keyword: \"example\",\n    type: \"string\",\n});\n//ajvErrors(ajv, {singleError: false}); // this is required for custom messages see https://ajv.js.org/packages/ajv-errors.html\nconst validate = ajv.compile(declarationSchema);\n\nlet contactMessage = `\n +-------------------------------------------------------------------+ \n | Internal \"Heta compiler\" error, contact the developers.           | \n | Create an issue: ${hetaCompilerPackage.bugs.url} | \n | or mail to: ${hetaCompilerPackage.bugs.email}                                     | \n +-------------------------------------------------------------------+ \n`;\n\nself.onmessage = (evt) => {\n    // first lines in console\n    postMessage({action: 'console', value: 'heta build', append: true});\n    postMessage({action: 'console', value: '\\nRunning compilation with declaration file \"/platform.json\"...', append: true});\n\n    // create declaration\n    let declarationFile = self.resolveLocalFileSystemSyncURL(evt.data.url + '/platform.json').file();\n    let declarationText = reader.readAsText(declarationFile);\n    try {\n        var declaration = JSON.parse(declarationText);\n    } catch (e) {\n        postMessage({action: 'console', value: `\\nDeclaration file must be JSON formatted:`, append: true});\n        postMessage({action: 'console', value: `\\n\\t- ${e.message}`, append: true});\n        \n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    // validate and set defaults\n    let valid = validate(declaration);\n    if (!valid) { // analyze errors\n        postMessage({action: 'console', value: '\\nErrors in declaration file:', append: true});\n        validate.errors.forEach((ajvError) => {\n            let msg = `\\n\\t- \"${ajvError.instancePath}\" ${ajvError.message}`;\n            postMessage({action: 'console', value: msg, append: true});\n        });\n\n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    // === wrong version throws, if no version stated than skip ===\n    let satisfiesVersion = semver.satisfies(hetaCompilerPackage.version, declaration.builderVersion);\n    if (!satisfiesVersion) {\n        postMessage({action: 'console', value: `\\nVersion requirements (${declaration.builderVersion}) don't meet builder version ${hetaCompilerPackage.version}.`, append: true});\n        \n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    // === this part displays \"send errors to developer\" message ===\n    try {\n        var container = build(evt.data.url, declaration);\n    } catch(error) {\n        postMessage({action: 'console', value: contactMessage + '\\n', append: true});\n        postMessage({action: 'console', value: error.stack, append: true});\n\n        postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n        return;\n    }\n\n    if (container.hetaErrors().length > 0) {\n        postMessage({action: 'console', value: '\\nCompilation ERROR! See logs.', append: true});\n    } else {\n        postMessage({action: 'console', value: '\\nCompilation OK!', append: true});\n    }\n\n    postMessage({action: 'console', value: '\\n\\n$ ', append: true});\n};\n\nfunction build(url, settings) { // modules, exports\n    let coreDirname = '/';\n    /*\n        constructor()\n    */\n\n    // create container and logger\n    let c = new Container();\n    /*\n    c.logger.addTransport((level, msg, opt, levelNum) => { // temporal solution, all logs to console\n        console.log(`{heta-compiler} [${level}]\\t${msg}`);\n    });\n    */\n    c.logger.addTransport((level, msg, opt, levelNum) => {\n        let value = `\\n[${level}]\\t${msg}`;\n\n        postMessage({action: 'console', value: value, append: true});\n    });\n\n    // file paths\n    let _coreDirname = path.resolve(coreDirname);\n    let _distDirname = path.resolve(coreDirname, settings.options.distDir);\n    let _metaDirname = path.resolve(coreDirname, settings.options.metaDir);\n    let _logPath = path.resolve(coreDirname, settings.options.logPath);\n\n    c.logger.info(`Heta builder of version ${hetaCompilerPackage.version} initialized in directory \"${_coreDirname}\"`);\n    if (settings.id) c.logger.info(`Platform id: \"${settings.id}\"`);\n\n    /*\n        run()\n    */\n    c.logger.info(`Compilation of module \"${settings.importModule.source}\" of type \"${settings.importModule.type}\"...`);\n\n    // 1. Parsing\n    let ms = new ModuleSystem(c.logger, (filename) => {\n        try {\n            let file = self.resolveLocalFileSystemSyncURL(url + filename).file();\n            var arrayBuffer = reader.readAsArrayBuffer(file);\n        } catch (e) {\n            throw new Error(`File ${filename} is not found.`);\n        }\n        \n        return Buffer.from(arrayBuffer);\n    });\n    let absFilename = path.join(_coreDirname, settings.importModule.source);\n    let sourceType = settings.importModule.type;\n    ms.addModuleDeep(absFilename, sourceType, settings.importModule);\n\n    // 2. Modules integration\n    if (settings.options.debug) {\n        Object.values(ms.moduleCollection).forEach((value) => {\n          let relPath = path.relative(_coreDirname, value.filename + '.json');\n          let absPath = path.join(_metaDirname, relPath);\n          let str = JSON.stringify(value.parsed, null, 2);\n          fs.outputFileSync(absPath, str);\n          c.logger.info(`Meta file was saved to ${absPath}`);\n        });\n    }\n    let qArr = ms.integrate();\n    \n    // 3. Translation\n    c.loadMany(qArr, false);\n    \n    // 4. Binding\n    c.logger.info('Setting references in elements, total length ' + c.length);\n    c.knitMany();\n    \n    // 5. Circular start_ and ode_\n    c.logger.info('Checking for circular references in Records.');\n    c.checkCircRecord();\n    \n    // 6. check circ UnitDef\n    c.checkCircUnitDef();\n\n    \n    // === STOP if errors ===\n    if (!c.logger.hasErrors) {\n\n        // 7. Units checking\n        if (settings.options.unitsCheck) {\n          c.logger.info('Checking unit\\'s consistency.');\n          c.checkUnits();\n        } else {\n          c.logger.warn('Units checking skipped. To turn it on set \"unitsCheck: true\" in declaration.');\n        }\n\n        // 8. Terms checking\n        c.logger.info('Checking unit\\'s terms.');\n        c.checkTerms();\n\n        // 9. Exports\n        // create dist dir\n        var distDirectoryEntry = self.resolveLocalFileSystemSyncURL(url)\n            .getDirectory(_distDirname, {create: true});\n        // save\n        if (settings.options.skipExport) {\n            c.logger.warn('Exporting skipped as stated in declaration.');\n        } else if (settings.options.juliaOnly) {\n            c.logger.warn('\"Julia only\" mode');\n            //this.exportJuliaOnly(); \n            // create export without putting it to exportStorage\n            let Julia = this.container.classes['Julia'];\n            let exportItem = new Julia({\n                format: 'Julia',\n                filepath: '_julia'\n            });\n\n            _makeAndSave(exportItem, distDirectoryEntry);\n        } else {\n            //this.exportMany();\n            let exportElements = [...c.exportStorage].map((x) => x[1]);\n            c.logger.info(`Start exporting to files, total: ${exportElements.length}.`);\n\n            exportElements.forEach((exportItem) => _makeAndSave(exportItem, distDirectoryEntry));\n        }\n      } else {\n        c.logger.warn('Units checking and export were skipped because of errors in compilation.');\n      }\n\n    // 10. save logs if required\n    let hetaErrors = c.hetaErrors();\n    let createLog = settings.options.logMode === 'always' \n      || (settings.options.logMode === 'error' && hetaErrors.length > 0);\n    if (createLog) {\n      switch (settings.options.logFormat) {\n      case 'json':\n        var logs = JSON.stringify(c.defaultLogs, null, 2);\n        break;\n      default: \n        logs = c.defaultLogs\n          .map(x => `[${x.level}]\\t${x.msg}`)\n          .join('\\n');  \n      }\n\n      //fs.outputFileSync(_logPath, logs);\n      self.resolveLocalFileSystemSyncURL(url)\n        .getFile(_logPath, {create: true})\n        .createWriter()\n        .write(new Blob([logs], { type: \"text/plain\" }));\n      c.logger.info(`All logs was saved to file: \"${_logPath}\"`);\n    }\n\n    if (!c.logger.hasErrors) {\n        postMessage({action: 'finished', dist: _distDirname, logPath: _logPath});\n    } else {\n        postMessage({action: 'stop', logPath: _logPath});\n    }\n\n    // XXX: TEMP for testing\n    //let entries = distDirectoryEntry?.createReader().readEntries();\n    //console.log(entries);\n    \n    return c;\n}\n\nfunction _makeAndSave(exportItem, distDirectoryEntry) {\n    let logger = exportItem._container.logger;\n    let absPath = path.resolve(distDirectoryEntry.fullPath, exportItem.filepath); // /dist/matlab\n    let msg = `Exporting to \"${absPath}\" of format \"${exportItem.format}\"...`;\n    logger.info(msg);\n\n    let mmm = exportItem.make();\n\n    mmm.forEach((out) => {\n        try {\n            var fileName = exportItem.filepath + out.pathSuffix;\n            _writeFileDeep(distDirectoryEntry, fileName, new Blob([out.content]));\n        } catch (e) {\n            let msg =`Heta compiler cannot export to file: \"${fileName}\": \\n\\t- ${e.message}`;\n            logger.error(msg, {type: 'ExportError'});\n        }\n    });\n}\n\nfunction _writeFileDeep(directoryEntry, relPath, blob) {\n    let relPathArray = relPath.split('/');\n    let filename = relPathArray.pop();\n\n    // create directory deep\n    let currentEntry = directoryEntry;\n    for (let x of relPathArray) {\n        currentEntry = currentEntry.getDirectory(x, {create: true, exclusive: false})\n    }\n\n    currentEntry.getFile(filename, {create: true, exclusive: true})\n        .createWriter()\n        .write(blob);\n}","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_ajv_dist_ajv_js-node_modules_heta-compiler_src_webpack_js-node_modules_s-b458c9\"], () => (__webpack_require__(\"./src/build.js\")))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"cd6173c633cc367e553f\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_build_js\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkheta_online\"] = self[\"webpackChunkheta_online\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(\"vendors-node_modules_ajv_dist_ajv_js-node_modules_heta-compiler_src_webpack_js-node_modules_s-b458c9\").then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["Container","ModuleSystem","Transpot","path","declarationSchema","Ajv","hetaCompilerPackage","semver","self","requestFileSystemSync","webkitRequestFileSystemSync","resolveLocalFileSystemSyncURL","webkitResolveLocalFileSystemSyncURL","reader","FileReaderSync","ajv","allErrors","useDefaults","addKeyword","keyword","type","validate","compile","contactMessage","concat","bugs","url","email","onmessage","evt","postMessage","action","value","append","declarationFile","data","file","declarationText","readAsText","declaration","JSON","parse","e","message","valid","errors","forEach","ajvError","msg","instancePath","satisfiesVersion","satisfies","version","builderVersion","container","build","error","stack","hetaErrors","length","settings","coreDirname","c","logger","addTransport","level","opt","levelNum","_coreDirname","resolve","_distDirname","options","distDir","_metaDirname","metaDir","_logPath","logPath","info","id","importModule","source","ms","filename","arrayBuffer","readAsArrayBuffer","Error","Buffer","from","absFilename","join","sourceType","addModuleDeep","debug","Object","values","moduleCollection","relPath","relative","absPath","str","stringify","parsed","fs","outputFileSync","qArr","integrate","loadMany","knitMany","checkCircRecord","checkCircUnitDef","hasErrors","unitsCheck","checkUnits","warn","checkTerms","distDirectoryEntry","getDirectory","create","skipExport","juliaOnly","Julia","classes","exportItem","format","filepath","_makeAndSave","exportElements","_toConsumableArray","exportStorage","map","x","createLog","logMode","logFormat","logs","defaultLogs","getFile","createWriter","write","Blob","dist","_container","fullPath","mmm","make","out","fileName","pathSuffix","_writeFileDeep","content","directoryEntry","blob","relPathArray","split","pop","currentEntry","_iterator","_createForOfIteratorHelper","_step","s","n","done","exclusive","err","f"],"sourceRoot":""}